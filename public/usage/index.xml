<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usage on Go-Chaos</title>
    <link>https://gochaos-app.github.io/usage/</link>
    <description>Recent content in Usage on Go-Chaos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Apr 2016 16:50:16 +0200</lastBuildDate><atom:link href="https://gochaos-app.github.io/usage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS</title>
      <link>https://gochaos-app.github.io/usage/aws/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>https://gochaos-app.github.io/usage/aws/</guid>
      <description>Environment In this theoretical environment, the team has the Login service running inside AWS EC2 instances. A lambda function gets called to obtain the device resolution, will apply chaos on that as well.
Experiment Start by creating a new chaos experiment file called config.hcl copy-paste the following code:
app = &amp;#34;Login&amp;#34; description = &amp;#34;Chaos Experiment for login app&amp;#34; job &amp;#34;aws&amp;#34; &amp;#34;ec2&amp;#34; { region = &amp;#34;us-east-1&amp;#34; config { tag = &amp;#34;Name:login-app-prod&amp;#34; chaos = &amp;#34;stop&amp;#34; count = 3 } } Go-chaos will search for 3 aws instances in us-east-1 region with the tag Name:login-app-prod.</description>
    </item>
    
    <item>
      <title>K8s</title>
      <link>https://gochaos-app.github.io/usage/k8s/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>https://gochaos-app.github.io/usage/k8s/</guid>
      <description>Environment In the next environment, we have a inventory app that is running on k8s, the hypothesis is that our customers are able to get products with no problem even if our app gets scale down or up.
Experiment Create a new chaos experiment file called inventory-config.hcl
app = &amp;#34;inventory app&amp;#34; description = &amp;#34;Chaos Experiment for inventory app, check if customers are able to get products in cart&amp;#34; job &amp;#34;kubernetes&amp;#34; &amp;#34;pod&amp;#34; { namespace = &amp;#34;inventory-app&amp;#34; config { tag = &amp;#34;app:inventory-prod&amp;#34; chaos = &amp;#34;terminate&amp;#34; count = 5 } } The previous job will find 5 pods with label app:inventory-prod and terminate those.</description>
    </item>
    
  </channel>
</rss>
